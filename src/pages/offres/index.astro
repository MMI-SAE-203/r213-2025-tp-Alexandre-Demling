---
import Base from "../../layouts/Base.astro";
import Card from "../../components/Card.astro";

import { getOffres } from "../../backend.mjs";
import { filterByPrix } from '../../backend.mjs';

let offres = await getOffres();
let message = '';

if (Astro.request.method === "POST") {
    const data = await Astro.request.formData();
    const minPrix = parseInt(data.get("minPrix") as string);
    const maxPrix = parseInt(data.get("maxPrix") as string);

    if (minPrix > 0 && maxPrix > 0 && maxPrix > minPrix) {
        offres = await filterByPrix(minPrix, maxPrix);
        
        if (offres.length === 0) {
            message = `Pas d'offres entre ${minPrix}€ et ${maxPrix}€`;
        } else {
            message = `Liste des offres entre ${minPrix}€ et ${maxPrix}€`;
        }
    } else {
        message = "Veuillez entrer des valeurs valides pour le prix.";
    }
} else {
    offres = await getOffres();
}
---

<Base titre="Offres">
    <div class="container mx-auto px-4 py-8">
        <h1 class="text-4xl font-bold mb-6 text-gray-800">Offres</h1>
        <p class="text-lg mb-8 text-gray-600">Découvrez nos offres exceptionnelles !</p>

        <div x-data="{ showFavorites: false, view: 'grid' }" class="space-y-8">
            <div class="flex flex-wrap gap-4">
                <button @click="showFavorites = !showFavorites" 
                        class="px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-white rounded-md transition duration-300 ease-in-out">
                    <span x-text="showFavorites ? 'Afficher tout' : 'Afficher les favoris'"></span>
                </button>
                <button @click="view = 'grid'" 
                        class="px-4 py-2 bg-red-500 hover:bg-red-600 text-white rounded-md transition duration-300 ease-in-out"
                        :class="{ 'bg-red-700': view === 'grid' }">
                    Afficher en grille
                </button>
                <button @click="view = 'list'" 
                        class="px-4 py-2 bg-purple-500 hover:bg-purple-600 text-white rounded-md transition duration-300 ease-in-out"
                        :class="{ 'bg-purple-700': view === 'list' }">
                    Afficher en liste
                </button>
            </div>

            <form action="/offres" method="POST" class="flex flex-wrap gap-4 items-end">
                <div class="flex flex-col">
                    <label for="minPrix" class="mb-2 text-sm font-medium text-gray-700">Prix minimum</label>
                    <input type="number" id="minPrix" name="minPrix" placeholder="Prix minimum" 
                           class="px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" />
                </div>
                <div class="flex flex-col">
                    <label for="maxPrix" class="mb-2 text-sm font-medium text-gray-700">Prix maximum</label>
                    <input type="number" id="maxPrix" name="maxPrix" placeholder="Prix maximum" 
                           class="px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" />
                </div>
                <button type="submit" 
                        class="px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-md transition duration-300 ease-in-out">
                    Filtrer par prix
                </button>
            </form>

            {message && <p class="text-lg font-semibold text-gray-800">{message}</p>}

            <a href="/offres/add" class="inline-block px-6 py-3 bg-green-500 hover:bg-green-600 text-white rounded-md transition duration-300 ease-in-out">
                Ajouter une offre
            </a>


            <div x-show="!showFavorites && view === 'grid'" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {offres.map((offre) => <Card {...offre} />)}
            </div>
            <div x-show="showFavorites && view === 'grid'" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {offres.map((offre) => offre.favori && <Card {...offre} />)}
            </div>
            <div x-show="!showFavorites && view === 'list'" class="space-y-6">
                {offres.map((offre) => <Card {...offre} isList={true} />)}
            </div>
            <div x-show="showFavorites && view === 'list'" class="space-y-6">
                {offres.map((offre) => offre.favori && <Card {...offre} isList={true} />)}
            </div>
        </div>
    </div>
</Base>